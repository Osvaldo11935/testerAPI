const requestUrl=async(_url_,_method_,query,variables={})=>
{
    let reponse=await fetch(`${_url_}`,{
           method: `${_method_}`,
           headers: { 'Content-Type': 'application/json'},
           body: query==null?null:query
    })
    return (await reponse).json()
}
const requestUrlToken=async(_url_,_method_,query,variables={},token=null)=>
{
    let reponse=await fetch(`${_url_}`,{
           method: `${_method_}`,
           headers: { 'Content-Type': 'application/json','Authorization':'Bearer '+token},
           body: query==null?null:query
    })
    return (await reponse).json()
}
const creatElementFormResponse=async(value)=>
{
    let bodyRequ=document.getElementById("bodyFormResponse")
    if(value=="JSON")
    {
        bodyRequ.innerHTML=""
        let textar=document.createElement("textarea")
        textar.setAttribute("name","response")
        textar.setAttribute("id","response")
        textar.setAttribute("cols","30")
        textar.setAttribute("rows","10")
        textar.setAttribute("placeholder","{}")
        bodyRequ.append(textar)
        let dataRepo= window.localStorage;
        if(dataRepo.length!=0)
        {
            let strdata= dataRepo.getItem("1")
            if(strdata!=null)
            {   
                let responsebodyJson=document.getElementById("response")
                responsebodyJson.value=JSON.stringify(JSON.stringify(JSON.parse(strdata)))
            }
        }
    }
    else if(value=="TABLE")
    {
        bodyRequ.innerHTML=""
        let divtable=document.createElement("div")
        divtable.setAttribute("id","datatableresponse")
        let table=document.createElement("table")
        divtable.append(table)
        bodyRequ.append(divtable)
        let dataRepo= window.localStorage;
        if(dataRepo.length!=0)
        {
            let strdata= dataRepo.getItem("1")
            if(strdata!=null)
            {   
                let repo=JSON.parse(strdata)
                let table = document.querySelector("table");
                let data = Object.keys(repo[0]);
                let datable = repo;
                generateTableHead(table, data);
                generateTable(table, datable, "");
            }
        }
        
    }
}
const creatElementSelect=async(value)=>
{
    let bodyRequ=document.getElementById("headitem1")
    let bodyRequs=document.getElementById("body")
    if(value!="GET" && value!="DELETE" && bodyRequ.innerHTML=="")
    {
        let form=[{nome:"Seleciona a opção"},{nome:"JSON"},{nome:"FORM"}]
        let selct=document.createElement("select")
        selct.setAttribute("name","dataFormRequest")
        selct.setAttribute("id","dataFormRequest")
        selct.setAttribute("onchange","creatElement(this.value)")
        for(let i in form)
        {
            let opt=document.createElement("option")
            opt.setAttribute("value",`${form[i].nome}`)
            opt.append(document.createTextNode(form[i].nome))
            selct.append(opt)
        }
        bodyRequ.append(selct)
    }
    else if(value=="GET" || value=="DELETE")
    {
        bodyRequ.innerHTML="";
        bodyRequs.innerHTML=""
    }
}
const creatElement=async(value)=>
{
    let bodyRequ=document.getElementById("body")
    if(value=="JSON")
    {
        bodyRequ.innerHTML=""
        let textar=document.createElement("textarea")
        textar.setAttribute("name","dataRequest")
        textar.setAttribute("id","dataRequest")
        textar.setAttribute("cols","30")
        textar.setAttribute("rows","10")
        textar.setAttribute("placeholder","{}")
        bodyRequ.append(textar)
    }
    if(value=="FORM")
    {
        bodyRequ.innerHTML="";
        let div=document.createElement("div")
        div.setAttribute("id","formResponse")
        bodyRequ.append(div)
    }
}
function generateTableHead(table, data) {
    let thead = table.createTHead();
    let row = thead.insertRow();
    for (let key of data) {
        let th = document.createElement("th");
        let text = document.createTextNode(key);
        th.appendChild(text);
        row.appendChild(th);
    }
}
function generateTable(table, data, ids) {
    var id = "";
    for (let element of data) {
        let row = table.insertRow();
        for (key in element) {
            let cell = row.insertCell();
            let text = document.createTextNode(element[key]);
            cell.appendChild(text);
        }
    }
}
const get=async()=>
{
    let dataJson=null;
    let body=document.getElementById("dataRequest")
    let responsebody=document.getElementById("formResponse1")
    let url=document.getElementById("url").value
    let metho=document.getElementById("method").value
    if(metho!="GET" && metho!="DELETE")
     dataJson=body.value;
    let repo= await requestUrl(url,metho,dataJson);
    let dataRepo= window.localStorage;
    if(dataRepo.length!=0)
    {
        if(dataRepo.getItem("2")!=null)
        {
            dataRepo.removeItem("2")
            dataRepo.removeItem("1")
        }
    }
    if(dataRepo.length==0)
    {
        dataRepo.setItem("1",JSON.stringify(repo));
        dataRepo.setItem("2","1");
    }
    if(responsebody.value=="TABLE")
    {
        let table = document.querySelector("table");
        let data = Object.keys(repo[0]);
        let datable = repo;
        generateTableHead(table, data);
        generateTable(table, datable, "");
    }
    if(responsebody.value=="JSON")
    {
        let responsebodyJson=document.getElementById("response")
        responsebodyJson.value=JSON.stringify(repo)
    }
}
const aww=async()=>
{
    let token=await requestUrl("http://localhost:4000/authenticate/login","POST",JSON.stringify({EmailouUsuario: "Snir.dev@gmail.com",Password: "snir.123"}))
    let res=await requestUrlToken("http://localhost:4000/graphql","POST","query{allPessoa{data{idPessoa}}}",{},token)
}
aww()